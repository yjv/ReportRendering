{% block javascripts %}
    {% for name, path in renderer.javascripts %}
        <script type="text/javascript" src="{{ path }}" data-script-name="{{ name }}"></script>
    {% endfor %}
    {% block report_filtering_javascript %}
        <script type="text/javascript">
            jQuery(function() {
                window.reportFiltering = new ReportFiltering(
                        '{{ renderer.report.name }}',
                        '{{ renderer.getOption('data_key', 'report_filters') }}',
                        '{{ renderer.filters.get(constant('Yjv\\ReportRendering\\FilterConstants::LIMIT'), constant('Yjv\\ReportRendering\\FilterConstants::DEFAULT_LIMIT')) }}',
                        '{{ renderer.filters.get(constant('Yjv\\ReportRendering\\FilterConstants::OFFSET'), constant('Yjv\\ReportRendering\\FilterConstants::DEFAULT_OFFSET')) }}'
                );
                {% for key, value in renderer.filters.get(constant('Yjv\\ReportRendering\\FilterConstants::SORT'), {})|slice(0, 1) %}
                    window.reportFiltering.sortDirection = '{{ key }}';
                    window.reportFiltering.sortColumn = '{{ value }}';
                {% endfor %}
                {% if renderer.getOption('filter_uri') is not null %}
                    window.reportFiltering.filterUri = '{{ renderer.getOption('filter_uri') }}';
                {% endif %}
            });
        </script>
    {% endblock %}
{% endblock %}
{% block stylesheets %}
    {% for name, path in renderer.stylesheets %}
        <link rel="stylesheet" type="text/css" href="{{ path }}" data-stylesheet-name="{{ name }}">
    {% endfor %}
{% endblock %}
{% set html_attributes, default_html_attributes = renderer.attributes, {"id": "yjv-report-" ~ renderer.report.name, "class": "report"} %}
<div {{ block('html_attributes') }}>
    {% if renderer.hasFilterForm() %}
    {% block report_filters %}
    <div id="yjv-report-filters-{{ renderer.report.name }}" class="report-filters well well-small collapse">
    	<div>
    		<button type="button" data-toggle="collapse" data-target="#yjv-report-filters-{{ renderer.report.name }}" class="btn">
    		    Filters
    		</button>
    	</div>
    	<div>
    		<form>
    			{% for filter in renderer.filterForm.createView() %}
    			{{ form_label(filter) }}
    			{{ form_widget(filter) }}
    			{% endfor %}
    			<div>
    			    <button type="button" class="submit-filters btn btn-success">Filter</button>
    			    <button type="button" class="clear-filters btn btn-warning">Clear</button>
    			</div>
    		</form>
    	</div>
    </div>
    {% endblock %}
    {% endif %}
    <div class="report-content">
    {% if renderer.getOption('paginate', true) %}
        {% block report_pagination_top %}
            <div class="report-pagination pagination">
            <ul>
                {% set minPage = renderer.minPage %} 
                {% set currentPage = renderer.page %}
                {% set maxPage = renderer.maxPage %}
                {% set pageCount = renderer.pageCount %} 
                <li class="report-pagination-page {% if currentPage == 1 %} disabled{% endif %}" data-page="{{ currentPage - 1 }}">
                    <a href="javascript:void(0)"><<</a>
                </li>
                {% for page in minPage..maxPage %}
                    <li class="report-pagination-page{% if page == currentPage %} active{%  endif %}" data-page="{{ page }}">
                        <a href="javascript:void(0)">{{ page }}</a>
                    </li>
                {% endfor %}
                <li class="report-pagination-page {% if currentPage == pageCount %} disabled{% endif %}" data-page="{{ currentPage + 1 }}">
                    <a href="javascript:void(0)">>></a>
                </li>
            </ul>
            </div>
        {% endblock %}
    {% endif %}
    {% block report_data %}
    <table class="report-data table table-striped table-bordered table-hover">
    	{% block report_header %}
    	<thead>
    		{% block report_header_row %}
    		<tr>
    			{% for key, column in renderer.grid.columns %}
    				{% block report_header_cell %}
                        {% set options = column.options %}
                        {% set name = options.name|default('') %}
                        {% set html_attributes, default_html_attributes = options.attr|default({}), {'data-sort-name': options.sort_name|default(key), 'class': 'sort-column'} %}
                        <th {{ block('html_attributes') }}>
                            {% if options.sortable|default(false) %}
                                <a href="javascript:void(0)">{{ name }}</a>
                            {% else %}
                                {{ name }}
                            {% endif %}
                        </th>
    				{% endblock %}
    			{% endfor %}
    		</tr>
    		{% endblock %}
    	</thead>
    	{% endblock %}
    	{% block report_body %}
    	<tbody>
    		{% for row in renderer.grid %}
    			{% block report_row %}
                    {% set html_attributes, default_html_attributes = row.options.attr|default({}), {} %}
                    <tr {{ block('html_attributes') }}>
                        {% for cell in row.cells %}
                            {% block report_cell %}
                                {% set html_attributes, default_html_attributes = cell.options.attr|default({}), {} %}
                                <td {{ block('html_attributes') }}>
                                    {{ cell.data|raw }}
                                </td>
                            {% endblock %}
                        {% endfor %}
                    </tr>
    			{% endblock %}
    		{% endfor %}
    	</tbody>
    	{% endblock %}
    </table>
    {% endblock %}
    {% if renderer.getOption('paginate', true) %}
    {% block report_pagination_bottom %}
    {{ block('report_pagination_top') }}
    {% endblock %}
    {% endif %}
    </div>
</div>
{% set html_attributes, default_html_attributes = {}, {} %}
{% block html_attributes %}
    {% spaceless %}
        {% if default_html_attributes['class'] is defined and html_attributes['class'] is defined %}
            {% set html_attributes = html_attributes|merge({'class': html_attributes['class'] ~ ' ' ~ default_html_attributes['class']}) %}
        {% endif %}
        {% set html_attributes = default_html_attributes|merge(html_attributes) %}
        {% for name, value in html_attributes %}
            {{ name }}="{{ value }}"
        {% endfor %}
    {% endspaceless %}
{% endblock %}